# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
    tags: ["**"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.20'

    - name: Install golint
      run: go install golang.org/x/lint/golint

    - name: Lint
      id: lint
      run: make lint

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.20'

    - name: Test
      run: make test

  build-and-push-image:
    needs: ["lint", "test"]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - name: checkout source code
        uses: actions/checkout@v4
      - name: Get Branch
        run: echo "GIT_VER=${GITHUB_REF##*/}" >>  $GITHUB_ENV
      - name: Print Branch
        run: |
          tag=${{  github.ref_name }}
          branch=$(git branch --contains=$tag head -n1 cut -c3-)
          echo $branch
      - name: Print tag
        run: echo ${GITHUB_REF#refs/tags/}
      # -
      #   name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3
      # -
      #   name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      # - name: Log in to the Container registry
      #   uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      # - name: Log in to the Container registry
      #   uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      #   with:
      #     context: .
      #     push: true
      #     tags: "${{env.BRANCH}}-${GITHUB_SHA::7}"
      #     labels: ${{ steps.meta.outputs.labels }}, 
  
